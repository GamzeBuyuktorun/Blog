@model BlogProject.Models.BlogEntry

@{
    ViewData["Title"] = "Blog Yazısı Düzenle";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-edit"></i> Blog Yazısı Düzenle</h4>
                <small class="text-muted">Blog: @ViewBag.BlogTitle</small>
            </div>
            <div class="card-body">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <h6>Hatalar:</h6>
                        <ul class="mb-0">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <form asp-action="Edit" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="BlogId" />
                    
                    <div class="mb-3">
                        <label asp-for="Title" class="form-label">Yazı Başlığı *</label>
                        <input asp-for="Title" class="form-control" placeholder="Yazınızın başlığını girin" required />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Content" class="form-label">İçerik *</label>
                        <textarea asp-for="Content" class="form-control" rows="15" 
                                  placeholder="Yazınızın içeriğini girin (Markdown desteklenir)" required></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                        <div class="form-text">Markdown formatını kullanabilirsiniz (başlıklar için #, kalın yazı için **metin**).</div>
                    </div>
                    
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Değişiklikleri Kaydet
                        </button>
                        
                        <a href="@Url.Action("Details", new { slug = Model.Slug })" class="btn btn-outline-info">
                            <i class="fas fa-eye"></i> Yazıyı Görüntüle
                        </a>
                        
                        <a href="@Url.Action("Details", "Blog", new { slug = Model.Blog?.Slug })" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Blog'a Dön
                        </a>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="mt-4">
            <div class="alert alert-info">
                <h6><i class="fas fa-info-circle"></i> Markdown Kullanım İpuçları</h6>
                <ul class="mb-0 small">
                    <li><code># Başlık</code> - Ana başlık</li>
                    <li><code>## Alt Başlık</code> - Alt başlık</li>
                    <li><code>**kalın yazı**</code> - Kalın yazı</li>
                    <li><code>*italik yazı*</code> - İtalik yazı</li>
                    <li><code>[Link metni](URL)</code> - Bağlantı</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}